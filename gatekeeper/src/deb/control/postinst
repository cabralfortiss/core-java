#!/bin/bash
# postinst script for arrowhead-gatekeeper
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

SYSTEM_NAME="gatekeeper"
PKG_NAME="arrowhead-gatekeeper"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        . /usr/share/arrowhead/conf/ahconf.sh
        SYSTEM_DIR="${AH_SYSTEMS_DIR}/${SYSTEM_NAME}"

        echo "Configuring MySQL database..." >&2
        ah_db_logs
        ah_db_arrowhead_cloud
        mysql -u root < /usr/share/arrowhead/db/create_gatekeeper_db_empty.sql
        ah_db_hibernate_sequence
        ah_db_own_cloud
        ah_db_user

        if [ ! -d "${SYSTEM_DIR}" ]; then
            mkdir -p ${SYSTEM_DIR}
        fi

        ah_cert_signed_system ${SYSTEM_NAME}

        if [ $(mysql -u root arrowhead -sse "SELECT COUNT(*) FROM arrowhead_cloud;") -eq 0 ]; then

            db_get arrowhead-gatekeeper/address; ADDRESS="$RET"
            if [ -z "${ADDRESS}" ]; then
                ADDRESS=($(hostname -I))
                db_set arrowhead-gatekeeper/address "${ADDRESS}"
            fi
            db_input high arrowhead-gatekeeper/address || true
            db_go || true
            db_get arrowhead-gatekeeper/address; ADDRESS="$RET"

            pubkey64=$(\
                keytool -export \
                    -alias ${SYSTEM_NAME} \
                    -storepass ${AH_PASS_CERT}\
                    -keystore ${SYSTEM_DIR}/${SYSTEM_NAME}.p12 \
                | openssl x509 \
                    -inform der \
                    -pubkey \
                    -noout \
                | tail -n +2 | head -n -1 | sed ':a;N;$!ba;s/\n//g')

            mysql -u root arrowhead <<EOF
LOCK TABLES arrowhead_cloud WRITE;
INSERT INTO arrowhead_cloud VALUES (1,'${ADDRESS}','${pubkey64}','${AH_CLOUD_NAME}','${SYSTEM_NAME}','${AH_OPERATOR}',8447,'Y');
UNLOCK TABLES;
EOF
        fi

        if [ $(mysql -u root arrowhead -sse "SELECT COUNT(*) FROM own_cloud;") -eq 0 ]; then
            mysql -u root arrowhead <<EOF
LOCK TABLES own_cloud WRITE;
INSERT INTO own_cloud VALUES (1);
UNLOCK TABLES;
EOF
        fi

        if [ $(mysql -u root arrowhead -sse "SELECT COUNT(*) FROM broker;") -eq 0 ]; then
            db_input high arrowhead-gatekeeper/public_brokers || true
            db_go || true
            db_get arrowhead-gatekeeper/public_brokers; ADD_BROKERS="$RET"
            case ${ADD_BROKERS} in
                Yes )
                    mysql -u root arrowhead <<EOF
LOCK TABLES broker WRITE, hibernate_sequence WRITE;
INSERT INTO broker (id, address, authentication_info, broker_name, port, is_secure)
    SELECT next_val, 'arrowhead-relay.tmit.bme.hu', NULL, 'arrowhead-relay-insecure', 5672, 'N' FROM hibernate_sequence;
UPDATE hibernate_sequence SET next_val = next_val + 1;
INSERT INTO broker (id, address, authentication_info, broker_name, port, is_secure)
    SELECT next_val, 'arrowhead-relay.tmit.bme.hu', NULL, 'arrowhead-relay-secure', 5671, 'Y' FROM hibernate_sequence;
UPDATE hibernate_sequence SET next_val = next_val + 1;
INSERT INTO broker (id, address, authentication_info, broker_name, port, is_secure)
    SELECT next_val, 'arrowhead-relay2.tmit.bme.hu', NULL, 'arrowhead-relay2-insecure', 5672, 'N' FROM hibernate_sequence;
UPDATE hibernate_sequence SET next_val = next_val + 1;
INSERT INTO broker (id, address, authentication_info, broker_name, port, is_secure)
    SELECT next_val, 'arrowhead-relay2.tmit.bme.hu', NULL, 'arrowhead-relay2-secure', 5671, 'Y' FROM hibernate_sequence;
UPDATE hibernate_sequence SET next_val = next_val + 1;
UNLOCK TABLES;
EOF
                    ;;
                No )
                    ;;
            esac
        fi

        if [ ! -f "${SYSTEM_DIR}/app.properties" ]; then
            /bin/cat <<EOF >${SYSTEM_DIR}/app.properties
# Database parameters
db_user=arrowhead
db_password=${AH_PASS_DB}
db_address=jdbc:mysql://127.0.0.1:3306/arrowhead?useSSL=false

##########################################
# MANDATORY PARAMETERS ONLY IN SECURE MODE
##########################################

# Certificate related paths and passwords
keystore=${SYSTEM_DIR}/${SYSTEM_NAME}.p12
keystorepass=${AH_PASS_CERT}
keypass=${AH_PASS_CERT}
truststore=${AH_CONF_DIR}/truststore.p12
truststorepass=${AH_PASS_CERT}

# Certificate related paths and passwords
gatekeeper_keystore=${SYSTEM_DIR}/${SYSTEM_NAME}.p12
gatekeeper_keystore_pass=${AH_PASS_CERT}
gatekeeper_keypass=${AH_PASS_CERT}
cloud_keystore=${AH_CLOUDS_DIR}/${AH_CLOUD_NAME}.p12
cloud_keystore_pass=${AH_PASS_CERT}
cloud_keypass=${AH_PASS_CERT}
master_arrowhead_cert=${AH_CONF_DIR}/master.crt

################################################
# NON-MANDATORY PARAMETERS (defaults are showed)
################################################

# Webserver parameters
address=0.0.0.0
internal_insecure_port=8446
internal_secure_port=8447
external_insecure_port=8448
external_secure_port=8449

# Service Registry
sr_address=0.0.0.0
sr_insecure_port=8442
sr_secure_port=8443

# Orchestrator
orch_address=0.0.0.0
orch_insecure_port=8440
orch_secure_port=8441

# Other
timeout=30000
use_gateway=true
EOF
            chown root:arrowhead ${SYSTEM_DIR}/app.properties
            chmod 640 ${SYSTEM_DIR}/app.properties
        fi

        ah_log4j_conf ${SYSTEM_NAME}

        echo "Restarting ${PKG_NAME}..." >&2
        systemctl daemon-reload
        systemctl restart ${PKG_NAME}.service
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
